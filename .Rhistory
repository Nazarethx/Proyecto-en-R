# Cargar los paquetes
install.packages("readxl")
library(readxl)
install.packages("dplyr")
library(dplyr)
install.packages("ggplot2")
library(ggplot2)
install.packages("scales")
library(scales)
# Leer el archivo Excel
ruta_archivo <- "C:/Users/Lucas/Desktop/Datos.xlsx"
datos_excel <- read_excel(ruta_archivo, sheet = 1)
#PREGUNTA 1
# Contar cuantos barrios hay en cada provincia usando la columna 'provincia'
BarriosPorProvincia <- datos_excel %>%
count(provincia)
# Crear un vector con los habitantes correspondientes a cada provincia
cantidades <- c(17569053, 429556, 1142963, 603120, 3120612, 3978984, 1197553, 1426426, 606041, 797955, 366022, 384607, 2014533, 1280960, 726590, 762067, 1440672, 818234, 540905, 333473, 3556522, 1054028, 190641, 1703186)
# Crear un DataFrame con provincias y cantidades
datos_adicionales <- data.frame(provincia = BarriosPorProvincia$provincia, cantidad = cantidades)
# Unir el DataFrame adicional con BarriosPorProvincia
BarriosPorProvincia <- BarriosPorProvincia %>%
left_join(datos_adicionales, by = "provincia")
# Calcular la relación barrios por cada 10,000 habitantes
BarriosPorProvincia <- BarriosPorProvincia %>%
mutate(barriosDiezMil = n / (cantidad / 10000))
# Mostrar el DataFrame final
print(BarriosPorProvincia)
#Grafico 1 - Mostrar pcias con mayor cantidad de barrios por habitante
# Crear el gráfico
ggplot(BarriosPorProvincia, aes(x = reorder(provincia, barriosDiezMil), y = barriosDiezMil)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Cantidad de Barrios Populares  c/10k Habitantes por Provincia",
x = "Provincia",
y = "Barrios por Cada 10,000 Habitantes") +
theme_minimal() +  # Para eliminar el fondo gris
coord_flip()  # Voltear el gráfico
# PREGUNTA 2
#10 Barrios mas antiguos y su situacion actual
barrios_mas_antiguos <- datos_excel %>%
arrange(decada_de_creacion) %>%  # Ordenar por década de creación
top_n(-10, decada_de_creacion) %>%  # Obtener los 10 más antiguos
select(nombre_barrio, provincia, departamento, cantidad_familias_aproximada, decada_de_creacion)
print(barrios_mas_antiguos)
#Grafico 2
ggplot(barrios_mas_antiguos, aes(x = cantidad_familias_aproximada, y = reorder(nombre_barrio, cantidad_familias_aproximada), color = provincia, size = decada_de_creacion)) +
geom_point(alpha = 0.7) +
geom_text(aes(label = paste(decada_de_creacion)), hjust = 1.2, vjust = -0.5, size = 3.5, color = "black") +
scale_size_continuous(range = c(3, 10)) +
labs(title = "10 Barrios Más Antiguos y Cantidad de familias actualmente",
x = "Cantidad de Familias",
y = "Nombre del Barrio",
color = "Provincia",
size = "Década de Creación") +
theme_minimal() +
theme(legend.position = "right")
# PREGUNTA 3
# 10 Barrios mas grandes en Cuanto a Habitantes
porHabitantes <- datos_excel %>%
arrange(desc(cantidad_familias_aproximada)) %>%
top_n(10, cantidad_familias_aproximada) %>%
select(nombre_barrio, provincia, departamento, cantidad_familias_aproximada)
print(porHabitantes)
# Grafico 3
ggplot(porHabitantes, aes(x = reorder(nombre_barrio, cantidad_familias_aproximada), y = cantidad_familias_aproximada, fill = provincia)) +
geom_bar(stat = "identity") +
labs(title = "10 Barrios con Mayor cantidad de habitantes",
x = "Nombre del Barrio",
y = "Cantidad de Familias Aproximada") +
theme_minimal() +
coord_flip()
# PREGUNTA 4
# Barrios con las viviendas mas chicas en m2
# Calcular el tamaño de vivienda en m² y seleccionar los 10 barrios con menor tamaño
porTamanio <- datos_excel %>%
mutate(tamano_vivienda_m2 = superficie_m2 / cantidad_viviendas_aproximadas) %>%
arrange(tamano_vivienda_m2) %>%
top_n(-10, tamano_vivienda_m2) %>%
select(nombre_barrio, provincia, departamento, tamano_vivienda_m2)
print(porTamanio)
#Grafico 4
ggplot(porTamanio, aes(x = reorder(nombre_barrio, tamano_vivienda_m2), y = tamano_vivienda_m2, fill = provincia)) +
geom_bar(stat = "identity") +
labs(title = "10 Barrios con viviendas mas chicas en m² en promedio",
x = "Nombre del Barrio",
y = "Tamaño de Vivienda en m²") +
theme_minimal() +
coord_flip()
# PREGUNTA 5
# Cantidad de Barrios Creados por Década
datos_excel_por_decada <- datos_excel %>%
count(decada_de_creacion)
print(datos_excel_por_decada)
# Grafico 5
ggplot(datos_excel_por_decada, aes(x = reorder(decada_de_creacion, n), y = n, fill = decada_de_creacion)) +
geom_bar(stat = "identity") +
labs(title = "Cantidad de Barrios Populares Creados por Década",
x = "Década de Creación",
y = "Cantidad de Barrios") +
theme_minimal() +
coord_flip() +
scale_y_continuous(labels = scales::comma)  # Usar formato de coma para los números en el eje y
#PREGUNTA 6
#Acceso a servicios publicos
analisisPorServicio <- datos_excel %>%
summarise(
energia_electrica_conexion_formal = sum(energia_electrica == "Conexion formal a la red con medidor domiciliario con factura", na.rm = TRUE),
total_energia_electrica = n(),
porcentaje_energia_electrica_conexion_formal = energia_electrica_conexion_formal / total_energia_electrica * 100,
efluentes_cloacales_conexion_formal = sum(efluentes_cloacales == "Conexion formal a la red cloacal", na.rm = TRUE),
total_efluentes_cloacales = n(),
porcentaje_efluentes_cloacales_conexion_formal = efluentes_cloacales_conexion_formal / total_efluentes_cloacales * 100,
agua_corriente_conexion_formal = sum(agua_corriente == "Conexion formal a la red de agua con factura", na.rm = TRUE),
total_agua_corriente = n(),
porcentaje_agua_corriente_conexion_formal = agua_corriente_conexion_formal / total_agua_corriente * 100,
cocina_conexion_formal = sum(cocina == "Conexion formal a la red de gas con factura", na.rm = TRUE),
total_cocina = n(),
porcentaje_cocina_conexion_formal = cocina_conexion_formal / total_cocina * 100
)
print(analisisPorServicio)
# Crear el DataFrame para el gráfico
data_grafico <- data.frame(
Servicio = c("Energía Eléctrica", "Red cloacal", "Agua Corriente", "Gas natural"),
Porcentaje_Conexion_Formal = c(
analisisPorServicio$porcentaje_energia_electrica_conexion_formal,
analisisPorServicio$porcentaje_efluentes_cloacales_conexion_formal,
analisisPorServicio$porcentaje_agua_corriente_conexion_formal,
analisisPorServicio$porcentaje_cocina_conexion_formal
)
)
# Grafico 6
ggplot(data_grafico, aes(x = Servicio, y = Porcentaje_Conexion_Formal)) +
geom_bar(stat = "identity", fill = "red") +
ylim(0, 50) +  # Limitar el eje Y hasta el 50%
geom_text(aes(label = paste0(round(Porcentaje_Conexion_Formal, 1), "%")), vjust = -0.5, size = 5) +
labs(title = "Porcentaje de Conexión Formal por Servicio",
x = "Servicio",
y = "Porcentaje de viviendas con Conexión Formal") +
theme_minimal()
